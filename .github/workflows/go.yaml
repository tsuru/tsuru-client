name: Go
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:

    - uses: actions/setup-go@v1
      with:
        go-version: 1.15

    - uses: actions/checkout@v1

    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
      shell: bash
    
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1
      if: matrix.os == 'ubuntu-latest'

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      with:
        go-version: 1.15
    - uses: actions/checkout@v1
    - run: make metalint

  deploy:
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      with:
        go-version: 1.15
    - uses: actions/checkout@v1

    - name: rc release
      uses: goreleaser/goreleaser-action@v1
      if: contains(github.ref, '-rc')
      with:
        args: --config goreleaser-rc.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: stable release
      uses: goreleaser/goreleaser-action@v1
      if: "!contains(github.ref, '-rc')"
      with:
        args: --config goreleaser-stable.yml
      env:
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.5'

    - name: packagecloud
      env:
        PACKAGE_NAME: tsuru-client
        PACKAGECLOUD_TOKEN: ${{secrets.PACKAGECLOUD_TOKEN}}
        SKIP_GORELEASER: "true"
      run: |
        curl -sL https://raw.githubusercontent.com/tsuru/push-to-packagecloud/master/push.sh | bash
